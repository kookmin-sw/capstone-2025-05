name: Build Windows

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  SOLUTION_FILE_PATH: Builds\VisualStudio2022\MAPLE.sln
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup JUCE
      run: |
        echo "Downloading JUCE..."
        Invoke-WebRequest -Uri "https://github.com/juce-framework/JUCE/releases/download/7.0.9/juce-7.0.9-windows.zip" -OutFile "juce.zip"
        
        echo "Extracting JUCE..."
        Expand-Archive -Path "juce.zip" -DestinationPath "JUCE" -Force
        
        # JUCE 디렉토리 구조 확인
        echo "JUCE directory structure:"
        Get-ChildItem "JUCE" -Recurse | ForEach-Object {
            $indent = "  " * ($_.FullName.Split("\").Count - ($pwd.Path.Split("\").Count + 2))
            if ($_.PSIsContainer) {
                echo "${indent}[D] $($_.Name)"
            } else {
                echo "${indent}[F] $($_.Name)"
            }
        }
        
        # Projucer 찾기
        $PROJUCER_PATH = Get-ChildItem -Path "JUCE" -Recurse -Filter "Projucer.exe" | Select-Object -First 1 -ExpandProperty FullName
        
        if ($PROJUCER_PATH) {
            echo "Found Projucer at: $PROJUCER_PATH"
            
            # JUCE 모듈 경로 설정 및 확인
            $JUCE_MODULES_PATH = "D:\a\maple-client-desktop\maple-client-desktop\JUCE\JUCE\modules"
            echo "Checking JUCE modules path: $JUCE_MODULES_PATH"
            
            if (Test-Path $JUCE_MODULES_PATH) {
                echo "JUCE modules directory exists"
                echo "Modules directory contents:"
                Get-ChildItem $JUCE_MODULES_PATH | ForEach-Object {
                    echo "  $($_.Name)"
                }
                
                # 필요한 모듈이 모두 있는지 확인
                $required_modules = @(
                    "juce_core",
                    "juce_data_structures",
                    "juce_events",
                    "juce_graphics",
                    "juce_gui_basics"
                )
                
                $missing_modules = @()
                foreach ($module in $required_modules) {
                    if (-not (Test-Path "$JUCE_MODULES_PATH\$module")) {
                        $missing_modules += $module
                    }
                }
                
                if ($missing_modules.Count -gt 0) {
                    echo "Missing modules: $($missing_modules -join ', ')"
                    exit 1
                }
                
                # Projucer 전역 설정
                echo "Setting JUCE modules path in Projucer..."
                & $PROJUCER_PATH --set-global-search-path windows defaultJuceModulePath "$JUCE_MODULES_PATH"
                
                # .jucer 파일 수정
                echo "Updating .jucer file with correct module paths..."
                $jucer_content = Get-Content "MAPLE.jucer" -Raw
                foreach ($module in $required_modules) {
                    $module_path = "$JUCE_MODULES_PATH\$module" -replace "\\", "/"
                    $pattern = "(<MODULE\s+id=`"$module`"[^>]*?)(/>|>)"
                    $replacement = "`$1 path=`"$module_path`"/>"
                    $jucer_content = $jucer_content -replace $pattern, $replacement
                }
                $jucer_content | Set-Content "MAPLE.jucer" -NoNewline
                
                echo "Generating Visual Studio solution..."
                & $PROJUCER_PATH --resave "MAPLE.jucer"
                
                if (Test-Path "Builds\VisualStudio2022\MAPLE.sln") {
                    echo "Solution file generated successfully"
                } else {
                    echo "Solution file not found after generation"
                    exit 1
                }
            } else {
                echo "JUCE modules directory does not exist at: $JUCE_MODULES_PATH"
                exit 1
            }
        } else {
            echo "Projucer.exe not found in extracted files"
            exit 1
        }

    - name: Check Solution Path
      run: |
        echo "Checking solution file..."
        if (Test-Path ${{env.SOLUTION_FILE_PATH}}) {
            echo "Solution file exists at: ${{env.SOLUTION_FILE_PATH}}"
            dir Builds\VisualStudio2022
        } else {
            echo "Solution file not found at: ${{env.SOLUTION_FILE_PATH}}"
            exit 1
        }

    - name: Build
      run: |
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}