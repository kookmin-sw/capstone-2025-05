name: CI/CD Pipeline

on:
  push:
    branches: [ maple-backend/refactor ]
  pull_request:
    branches: [ maple-backend/refactor ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install "pytest>=7.0.0,<8.0.0" "pytest-asyncio==0.23.4" email-validator aiofiles
    - name: Run tests
      run: python -m pytest
      env:
        TYPE: ${{ secrets.TYPE }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        CLIENT_EMAIL: ${{ secrets.CLIENT_EMAIL }}
        CLIENT_ID: ${{ secrets.CLIENT_ID }}
        AUTH_URI: ${{ secrets.AUTH_URI }}
        TOKEN_URI: ${{ secrets.TOKEN_URI }}
        AUTH_PROVIDER_CERT_URL: ${{ secrets.AUTH_PROVIDER_CERT_URL }}
        CLIENT_CERT_URL: ${{ secrets.CLIENT_CERT_URL }}
        UNIVERSE_DOMAIN: ${{ secrets.UNIVERSE_DOMAIN }}
        FILE_PATH: ${{ secrets.FILE_PATH }}
        CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
        API_KEY: ${{ secrets.API_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        STORAGE_BUCKET: ${{ secrets.STORAGE_BUCKET }}
        NEXT_PUBLIC_SPOTIFY_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_SPOTIFY_CLIENT_ID }}
        NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET: ${{ secrets.NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET }}

  build-and-push:
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/maple-backend/refactor' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/arm64  # ARM64 서버에 맞춤
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/maple-app:latest
        cache-from: type=gha
        cache-to: type=gha,mode=min
        build-args: |
          BUILDKIT_INLINE_CACHE=0

  deploy:
    needs: build-and-push
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/maple-backend/refactor' }}
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to Oracle Cloud via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.OCI_HOST }}
        username: ${{ secrets.OCI_USERNAME }}
        key: ${{ secrets.OCI_SSH_KEY }}
        key_path: ""
        passphrase: ${{ secrets.OCI_SSH_KEY_PASSPHRASE }}
        port: ${{ secrets.OCI_PORT }}
        script: |
          echo "Starting deployment..."
          mkdir -p ~/maple-app
          cd ~/maple-app
          
          echo "Creating .env file..."
          cat > .env << 'EOF'
          TYPE=${{ secrets.TYPE }}
          PROJECT_ID=${{ secrets.PROJECT_ID }}
          PRIVATE_KEY_ID=${{ secrets.PRIVATE_KEY_ID }}
          PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}
          CLIENT_EMAIL=${{ secrets.CLIENT_EMAIL }}
          CLIENT_ID=${{ secrets.CLIENT_ID }}
          AUTH_URI=${{ secrets.AUTH_URI }}
          TOKEN_URI=${{ secrets.TOKEN_URI }}
          AUTH_PROVIDER_CERT_URL=${{ secrets.AUTH_PROVIDER_CERT_URL }}
          CLIENT_CERT_URL=${{ secrets.CLIENT_CERT_URL }}
          UNIVERSE_DOMAIN=${{ secrets.UNIVERSE_DOMAIN }}
          FILE_PATH=${{ secrets.FILE_PATH }}
          CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}
          API_KEY=${{ secrets.API_KEY }}
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }}
          NEXT_PUBLIC_SPOTIFY_CLIENT_ID=${{ secrets.NEXT_PUBLIC_SPOTIFY_CLIENT_ID }}
          NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET=${{ secrets.NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET }}
          EOF
          
          echo "Creating docker-compose.yml file..."
          cat > docker-compose.yml << EOL
          version: '3'
          services:
            app:
              image: ${{ secrets.DOCKER_USERNAME }}/maple-app:latest
              container_name: maple-api
              restart: always
              ports:
                - "8000:8000"
              environment:
                - TYPE=\${TYPE}
                - PROJECT_ID=\${PROJECT_ID}
                - PRIVATE_KEY_ID=\${PRIVATE_KEY_ID}
                - PRIVATE_KEY=\${PRIVATE_KEY}
                - CLIENT_EMAIL=\${CLIENT_EMAIL}
                - CLIENT_ID=\${CLIENT_ID}
                - AUTH_URI=\${AUTH_URI}
                - TOKEN_URI=\${TOKEN_URI}
                - AUTH_PROVIDER_CERT_URL=\${AUTH_PROVIDER_CERT_URL}
                - CLIENT_CERT_URL=\${CLIENT_CERT_URL}
                - UNIVERSE_DOMAIN=\${UNIVERSE_DOMAIN}
                - FILE_PATH=\${FILE_PATH}
                - CLIENT_SECRET=\${CLIENT_SECRET}
                - GOOGLE_REDIRECT_URI=\${GOOGLE_REDIRECT_URI}
                - API_KEY=\${API_KEY}
                - DATABASE_URL=\${DATABASE_URL}
                - STORAGE_BUCKET=\${STORAGE_BUCKET}
                - NEXT_PUBLIC_SPOTIFY_CLIENT_ID=\${NEXT_PUBLIC_SPOTIFY_CLIENT_ID}
                - NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET=\${NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET}
              volumes:
                - ./static:/app/static
              networks:
                - maple-network
            nginx:
              image: nginx:stable-alpine
              container_name: maple-nginx
              restart: always
              ports:
                - "80:80"
                - "443:443"
              volumes:
                - ./default.conf:/etc/nginx/conf.d/default.conf:ro
                - /etc/letsencrypt:/etc/letsencrypt:ro
                - ./static:/usr/share/nginx/html/static
              depends_on:
                - app
              networks:
                - maple-network
          networks:
            maple-network:
              driver: bridge
          EOL
          
          echo "Pulling the latest Docker image..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/maple-app:latest || echo "Failed to pull image!"
          
          echo "Stopping existing containers..."
          docker-compose down || echo "No containers to stop"
          
          echo "Starting updated containers..."
          docker-compose up -d --pull always --force-recreate || echo "Failed to start containers!"
          
          echo "Deployment finished. Checking running containers..."
          docker ps