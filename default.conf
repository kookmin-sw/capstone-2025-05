server {
    listen 80;
    server_name maple.ne.kr;
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name maple.ne.kr;

    # SSL 설정
    ssl_certificate /etc/letsencrypt/live/maple.ne.kr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/maple.ne.kr/privkey.pem;
    
    # Enhanced SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Block direct access to documentation endpoints
    location = /docs {
        return 404;
    }               

    location = /redoc {
        return 404;
    }

    # API 요청을 FastAPI 서버로 프록시 - /api/v1/ 경로로 요청 받아서 FastAPI로 전달
    location /api/v1/ {
        # /api/v1/ 경로를 제거하고 FastAPI 서버로 전달
        proxy_pass http://app:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90s;
        proxy_redirect off;
    }

    # 정적 파일 처리
    location /static/ {
        alias /usr/share/nginx/html/static/;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        access_log off;
    }

    # Nginx status
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 172.16.0.0/12;  # Docker network
        deny all;
    }
}